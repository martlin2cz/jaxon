package cz.martlin.jaxon.j2k.transformers;

import cz.martlin.jaxon.j2k.data.JackToKlaxonException;
import cz.martlin.jaxon.j2k.transformer.J2KTransformerWithHeader;
import cz.martlin.jaxon.j2k.transformer.JackObjectsTransformer;
import cz.martlin.jaxon.jack.data.values.JackObject;
import cz.martlin.jaxon.klaxon.data.EntriesCollection;
import cz.martlin.jaxon.klaxon.data.KlaxonAbstractElement;
import cz.martlin.jaxon.klaxon.data.KlaxonElemWithChildren;
import cz.martlin.jaxon.klaxon.data.KlaxonElemWithValue;
import cz.martlin.jaxon.klaxon.data.KlaxonEntry;

public class J2KTransformWithHeaderVerboseImpl extends J2KTransformerWithHeader {

	// private static final String BODY_ELEM_NAME = "object";
	private static final String HEADER_ELEM_NAME = "header";
	private static final String ROOT_ELEM_NAME = "jaxon";

	public J2KTransformWithHeaderVerboseImpl(JackObjectsTransformer transformer) {
		super(transformer);
	}

	@Override
	protected KlaxonAbstractElement createHeaderElement(JackObject jack)
			throws JackToKlaxonException {

		EntriesCollection entries = new EntriesCollection();

		entries.add(new KlaxonElemWithValue("transformer", //
				transformer.getName()));

		entries.add(new KlaxonElemWithValue("type", //
				jack.getType().getTypeAsString()));

		return new KlaxonElemWithChildren(HEADER_ELEM_NAME, entries);
	}

	@Override
	protected String getBodyElemName(JackObject jack)
			throws JackToKlaxonException {
		throw new UnsupportedOperationException(
				"Body elem is generated by transformer");
		// return BODY_ELEM_NAME;
	}

	@Override
	protected String getRootElemName() {
		return ROOT_ELEM_NAME;
	}

	@Override
	protected void checkRoot(KlaxonAbstractElement klaxonRoot)
			throws JackToKlaxonException {

		try {
			if (!klaxonRoot.getName().equals(ROOT_ELEM_NAME)) {
				throw new IllegalArgumentException("Not a root");
			}

			KlaxonEntry header = klaxonRoot.asEntries().getFirst(
					HEADER_ELEM_NAME);
			if (header == null) {
				throw new IllegalArgumentException("Missing header");
			}

			// TODO FIXME body elem is generated by #transformer...
			// KlaxonEntry body =
			// klaxonRoot.asEntries().getFirst(BODY_ELEM_NAME);
			// if (body == null) {
			// throw new IllegalArgumentException("Missing body");
			// }

			KlaxonAbstractElement head = (KlaxonAbstractElement) header;

			if (head.asEntries().getFirst("transformer") == null) {
				throw new IllegalArgumentException("Missing transformer");
			}

			if (head.asEntries().getFirst("type") == null) {
				throw new IllegalArgumentException("Missing type");
			}
		} catch (Exception e) {
			throw new JackToKlaxonException("Invalid structure", e);
		}
	}
}
